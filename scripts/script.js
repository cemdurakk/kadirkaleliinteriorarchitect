// ================================
// ðŸŽ¯ VIEWPORT-BASED SCALING SÄ°STEMÄ° - TÃ¼m ekranlarda orantÄ±lÄ± gÃ¶rÃ¼nÃ¼m
// ================================
function scaleViewport() {
  const container = document.getElementById('viewport-container');
  if (!container) return;
  
  // ArtÄ±k scale etmeye gerek yok, site zaten ekranÄ±n tamamÄ±nÄ± kaplÄ±yor
  // Sadece iÃ§eriÄŸi ekran boyutuna gÃ¶re ayarlayalÄ±m
  const ww = window.innerWidth;
  const wh = window.innerHeight;
  
  // Ä°Ã§eriÄŸi ekran boyutuna gÃ¶re ayarla
  container.style.width = `${ww}px`;
  container.style.height = `${wh}px`;
}

// Viewport boyutu deÄŸiÅŸtiÄŸinde ve sayfa yÃ¼klendiÄŸinde gÃ¼ncelle
window.addEventListener('resize', scaleViewport);
window.addEventListener('DOMContentLoaded', scaleViewport);

document.addEventListener("DOMContentLoaded", function () {
  // ================================
  // ðŸ“¦ SLIDER (Ana Sayfa) BÃ¶lÃ¼mÃ¼
  // ================================
  const slides = document.querySelectorAll(".slide"); // TÃ¼m slaytlar
  const dots = document.querySelectorAll(".dot");     // Alttaki nokta navigasyonlarÄ±
  const leftArrow = document.querySelector(".arrow.left");   // Sol ok
  const rightArrow = document.querySelector(".arrow.right"); // SaÄŸ ok

  if (slides.length > 0 && leftArrow && rightArrow && dots.length > 0) {
    let currentSlide = 0;                // BaÅŸlangÄ±Ã§ slaytÄ±
    let slideInterval;                   // Otomatik geÃ§iÅŸ iÃ§in zamanlayÄ±cÄ±
    const animationTypes = ['fade'];     // Åžu anda sadece fade animasyonu kullanÄ±lÄ±yor
    let currentAnimation = 0;

    const sliderTexts = [
      {
        title: "HoÅŸ Geldiniz",
        desc: "Ä°Ã§ mimaride estetiÄŸin ve iÅŸlevselliÄŸin buluÅŸma noktasÄ±."
      },
      {
        title: "Ofis TasarÄ±mlarÄ±",
        desc: "Modern ve fonksiyonel Ã§alÄ±ÅŸma alanlarÄ±."
      },
      {
        title: "Mutfak Projeleri",
        desc: "ÅžÄ±klÄ±k ve pratiklik bir arada."
      }
    ];

    function updateHeroText(index) {
      const heroText = document.querySelector('.hero-text');
      if (!heroText) return;
      heroText.classList.remove('slide-in');
      void heroText.offsetWidth; // Reflow, animasyonu tekrar baÅŸlatmak iÃ§in
      heroText.querySelector('h1').textContent = sliderTexts[index].title;
      heroText.querySelector('p').textContent = sliderTexts[index].desc;
      heroText.classList.add('slide-in');
    }

    // Belirli bir slaytÄ± gÃ¶sterir
    function showSlide(index, direction = 'next') {
      // Eski slayttan "active" sÄ±nÄ±fÄ± Ã§Ä±karÄ±lÄ±r
      slides[currentSlide].classList.remove('active');

      // Yeni slayttan Ã¶nceki animasyon sÄ±nÄ±flarÄ± temizlenir
      slides[index].classList.remove('prev', 'next', 'fade');

      // Animasyon tipi belirlenir
      const animType = animationTypes[currentAnimation % animationTypes.length];
      if (animType === 'slide') {
        slides[index].classList.add(direction === 'next' ? 'next' : 'prev');
      } else {
        slides[index].classList.add(animType);
      }

      // Yeni slayta "active" sÄ±nÄ±fÄ± eklenir
      setTimeout(() => {
        slides[index].classList.add('active');
      }, 10);

      // Noktalardaki aktif sÄ±nÄ±f gÃ¼ncellenir
      dots.forEach(dot => dot.classList.remove("active"));
      dots[index].classList.add("active");

      currentSlide = index;
      currentAnimation++;
      updateHeroText(index); // <-- Metni gÃ¼ncelle
    }

    // Otomatik slayt geÃ§iÅŸini baÅŸlatÄ±r
    function startSlideShow() {
      clearInterval(slideInterval); // Ã–nceki intervali temizle
      slideInterval = setInterval(() => {
        const nextIndex = currentSlide === slides.length - 1 ? 0 : currentSlide + 1;
        showSlide(nextIndex, 'next');
      }, 7000); // 7 saniyede bir geÃ§iÅŸ
    }

    // Slider baÅŸlatÄ±cÄ± fonksiyon
    function initSlider() {
      slides[currentSlide].classList.add('active');
      dots[currentSlide].classList.add('active');
      updateHeroText(currentSlide); // Ä°lk metni ayarla
      startSlideShow();

      const slider = document.querySelector('.hero-slider');
      if (slider) {
        slider.addEventListener('mouseenter', () => clearInterval(slideInterval)); // Ãœzerine gelince durdur
        slider.addEventListener('mouseleave', startSlideShow); // AyrÄ±lÄ±nca devam ettir
      }
    }

    // Sol ok tÄ±klama
    leftArrow.addEventListener("click", () => {
      clearInterval(slideInterval);
      const prevIndex = currentSlide === 0 ? slides.length - 1 : currentSlide - 1;
      showSlide(prevIndex, 'prev');
      startSlideShow();
    });

    // SaÄŸ ok tÄ±klama
    rightArrow.addEventListener("click", () => {
      clearInterval(slideInterval);
      const nextIndex = currentSlide === slides.length - 1 ? 0 : currentSlide + 1;
      showSlide(nextIndex, 'next');
      startSlideShow();
    });

    // Noktalara tÄ±klama ile slayt deÄŸiÅŸtirme
    dots.forEach((dot, index) => {
      dot.addEventListener("click", () => {
        clearInterval(slideInterval);
        const direction = index > currentSlide ? 'next' : 'prev';
        showSlide(index, direction);
        startSlideShow();
      });
    });

    initSlider(); // Slider'Ä± baÅŸlat
  }

  // ================================
  // ðŸ§  PROJELER SAYFASI: PLAN-RENDER GÃ–RSEL GEÃ‡Ä°Åž
  // ================================

  // Mouse ile render-karakalem oranÄ±nÄ± kontrol et
  function setupPlanRenderHover(wrapperSelector) {
    const wrapper = document.querySelector(wrapperSelector);
    if (!wrapper) return;

    const renderDiv = wrapper.querySelector(".img-wrapper.render");
    const karakalemDiv = wrapper.querySelector(".img-wrapper.karakalem");
    if (!renderDiv || !karakalemDiv) return;

    let latestPercent = 50;  // BaÅŸlangÄ±Ã§ta yarÄ± yarÄ±ya gÃ¶rÃ¼nÃ¼r
    let animating = true;

    // Oranlara gÃ¶re width ayarla
    function updateWidths() {
      renderDiv.style.width = `${latestPercent}%`;
      karakalemDiv.style.width = `${100 - latestPercent}%`;
      animating = false;
    }

    // Mouse hareketine gÃ¶re width gÃ¼ncelle
    wrapper.addEventListener("mousemove", function (e) {
      const bounds = wrapper.getBoundingClientRect();
      const mouseX = e.clientX - bounds.left;
      latestPercent = Math.max(0, Math.min(100, (mouseX / bounds.width) * 100));

      if (!animating) {
        animating = true;
        requestAnimationFrame(updateWidths);
      }
    });

    // Mouse Ã§Ä±kÄ±nca %50'ye geri dÃ¶ner
    wrapper.addEventListener("mouseleave", function () {
      latestPercent = 50;
      if (!animating) {
        animating = true;
        requestAnimationFrame(updateWidths);
      }
    });
  }

  // TÃ¼m .plan-render-wrapper Ã¶ÄŸelerine fonksiyonu uygula
  document.querySelectorAll(".plan-render-wrapper").forEach((wrapper, index) => {
    setupPlanRenderHover(`.plan-render-wrapper:nth-of-type(${index + 1})`);
  });

  // ================================
  // ðŸ”½ HEADER Scroll Shrink Efekti (Sadece Ana Sayfa)
  // ================================
  window.addEventListener("scroll", function () {
    const header = document.getElementById("site-header");
    if (header) {
      if (window.scrollY > 50) {
        header.classList.add("shrink");
      } else {
        header.classList.remove("shrink");
      }
    }
  });

  // ================================
  // ðŸ“§ Ä°LETÄ°ÅžÄ°M FORMU - Mailto Fonksiyonu
  // ================================
  const contactForm = document.getElementById('contactForm');
  if (contactForm) {
    contactForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const name = document.getElementById('name').value;
      const email = document.getElementById('email').value;
      const message = document.getElementById('message').value;
      
      // Mailto linki oluÅŸtur
      const subject = encodeURIComponent('KK Design - Ä°letiÅŸim Formu');
      const body = encodeURIComponent(`Ad Soyad: ${name}\n\nE-posta: ${email}\n\nMesaj:\n${message}`);
      const mailtoLink = `mailto:kadirkalelidesign@gmail.com?subject=${subject}&body=${body}`;
      
      // Mail uygulamasÄ±nÄ± aÃ§
      window.location.href = mailtoLink;
    });
  }
});
